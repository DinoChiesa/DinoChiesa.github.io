{
  "swagger": "2.0",
  "basePath": "/Vendors",
  "schemes": [
    "http"
  ],
  "info": {
    "title": "VendorAccess",
    "contact": {},
    "version": "1"
  },
  "paths": {
    "/VendorOrderFroms/{VendorOrderFromNumber}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorOrderFrom",
        "parameters": [
          {
            "name": "VendorOrderFromData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorOrderFromData"
            },
            "description": ""
          },
          {
            "name": "HttpResponseMessage",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            },
            "description": ""
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Order From"
      }
    },
    "/VendorMarkets": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorMarket",
        "parameters": [
          {
            "name": "VendorMarketData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorMarketData"
            },
            "description": ""
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor Market"
      }
    },
    "/VendorContacts/{VendorContactId}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorContact",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorContactData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorContactData"
            },
            "description": ""
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Contact"
      }
    },
    "/VendorOrderFroms/{VendorOrderFromName}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an erorr message.",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          }
        },
        "operationId": "GetVendorOrderFromByName",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorOrderFromName",
            "in": "path",
            "required": true,
            "description": "A Vendor Order From Name",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Order From given a Vendor Order From Name"
      }
    },
    "/Vendors/{VendorId}/VendorStatus": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorStatus"
            }
          }
        },
        "operationId": "GetVendorStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "VendorId",
            "in": "path",
            "required": true,
            "description": "A Vendor Resource Id",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Status given a specified Vendor Resource Id"
      },
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorStatus"
            }
          }
        },
        "operationId": "UpdateVendorStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorStatus",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorStatus"
            },
            "description": ""
          },
          {
            "name": "VendorId",
            "in": "path",
            "required": true,
            "description": "A Vendor Resource Id",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Status to Active/Inactive"
      }
    },
    "/VendorPayTos": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorPayTo",
        "parameters": [
          {
            "name": "VendorPayToData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorPayToData"
            },
            "description": ""
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor Role Pay to"
      }
    },
    "/VendorOrderFroms/{VendorNumber}/VendorBrands": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorBrands"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorBrands"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorBrands"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorBrands"
            }
          }
        },
        "operationId": "GetOrderFromBrandByVendorNumber",
        "parameters": [
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          }
        ],
        "summary": "Get associated Brands to Vendor Order From"
      }
    },
    "/VendorSites/{VendorSiteId}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorSite",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "VendorSiteData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorSiteData"
            },
            "description": ""
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Site"
      }
    },
    "/VendorPayTos/{VendorNumber}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          }
        },
        "operationId": "GetVendorPayToByNumber",
        "parameters": [
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Pay To given a Vendor Number"
      }
    },
    "/VendorPartners/{VendorNumber}/VendorMarkets": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          }
        },
        "operationId": "GetVendorPartnerMarketByVendorNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get Vendor Partner Market Characteristics By Vendor Number"
      }
    },
    "/VendorOrderFroms/{VendorNumber}/VendorMarkets": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "type": "string"
            }
          }
        },
        "operationId": "GetVendorOrderFromMarketByVendorNumber",
        "parameters": [
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Get Order From Market Characteristics By Vendor Number"
      }
    },
    "/Vendors/{VendorName}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        },
        "operationId": "GetVendorByName",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "VendorName",
            "in": "path",
            "required": true,
            "description": "A Vendor Name",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor by Name"
      }
    },
    "/VendorContacts": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorContact",
        "parameters": [
          {
            "name": "VendorContactData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorContactData"
            },
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          }
        ],
        "summary": "Creation of a Vendor Contact with provided contact info"
      }
    },
    "/VendorPartners/{VendorPartnerName}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          }
        },
        "operationId": "GetVendorPartnerByName",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "query",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Partner given a Vendor Partner Name"
      }
    },
    "/VendorOrderFroms/{VendorNumber}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorOrderFrom"
            }
          }
        },
        "operationId": "GetVendorOrderFromByNumber",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Find a Vendor given a Vendor Order From Number"
      }
    },
    "/Vendors/{VendorNumber}/VendorContacts": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/VendorContacts"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/VendorContacts"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorContacts"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorContacts"
            }
          }
        },
        "operationId": "GetContactsByVendorNumber",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Retrieve all vendor contacts for a given vendor number"
      }
    },
    "/Vendors/{VendorNumber}/VendorSites": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorSites"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorSites"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorSites"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorSites"
            }
          }
        },
        "operationId": "GetAllVendorSitesByVendorNumber",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          }
        ],
        "summary": "Get all Vendor Sites given a Vendor Number"
      }
    },
    "/VendorPartners": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorPartner",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "VendorPartnerData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPartnerData"
            },
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor Role of Partner"
      }
    },
    "/VendorOrderFroms": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "200": {
            "description": "no description",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorOrderFrom",
        "parameters": [
          {
            "name": "VendorOrderFromData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorOrderFromData"
            },
            "description": ""
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor Role of Order From"
      }
    },
    "/VendorOrderFroms/{VendorNumber}/PaymentTerms": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/OrgRetailDepartmentPaymentTerms"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/OrgRetailDepartmentPaymentTerms"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/OrgRetailDepartmentPaymentTerms"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/OrgRetailDepartmentPaymentTerms"
            }
          }
        },
        "operationId": "GetOrderFromMarketDepartmentPaymentTerms",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "DeptCode",
            "in": "query",
            "required": true,
            "description": "Organization Retail Department Code",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "VendorMarketCode",
            "in": "query",
            "required": true,
            "description": "Vendor Market Code",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Get the Payment Terms given a specified VendorOrderFrom number, Vendor Market Code, and Organization Retail Department code"
      }
    },
    "/VendorPartners/{VendorPartnerId}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPartner"
            }
          }
        },
        "operationId": "GetVendorPartnerById",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorPartnerId",
            "in": "path",
            "required": true,
            "description": "A Vendor Partner Resource Id",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Partner given a Vendor Partner Resource Id"
      }
    },
    "/VendorBrands/{VendorBrandName}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          }
        },
        "operationId": "GetBrandByName",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "VendorBrandName",
            "in": "path",
            "required": true,
            "description": "Vendor Brand Name",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Brand given the Vendor Brand Name"
      }
    },
    "/VendorPayTos/{VendorPayToName}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorPayTo"
            }
          }
        },
        "operationId": "GetVendorPayToByName",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "query",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Pay To given a Vendor Pay To Name"
      }
    },
    "/Vendors/{VendorNumber}/VendorRelationships": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/VendorRelationships"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/VendorRelationships"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorRelationships"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorRelationships"
            }
          }
        },
        "operationId": "GetVendorRelationshipByVendorNumber",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          }
        ],
        "summary": "Get all related Vendors to a Vendor Number"
      }
    },
    "/Vendors/{VendorNumber}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        },
        "operationId": "GetVendorByNumber",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor given a Vendor Number"
      },
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendor",
        "parameters": [
          {
            "name": "VendorData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorData"
            },
            "description": ""
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          }
        ],
        "summary": "Update a particular Vendor specified by Vendor Number"
      }
    },
    "/VendorPartners/{VendorPartnerNumber}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorPartner",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "VendorPartnerData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorPartnerData"
            },
            "description": ""
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Partner"
      }
    },
    "/VendorSites": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorSites"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorSites"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorSites"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an erorr message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorSites"
            }
          }
        },
        "operationId": "GetAllVendorSites",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get all Vendor Sites"
      },
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorSite",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "VendorSiteData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorSiteData"
            },
            "description": ""
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor Site given Vendor Site information"
      }
    },
    "/VendorPayTos/{VendorPayToNumber}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorPayTo",
        "parameters": [
          {
            "name": "VendorPayToData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorPayToData"
            },
            "description": ""
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Pay To"
      }
    },
    "/VendorRelationships": {
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendorRelationship",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "VendorRelationshipData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorRelationshipData"
            },
            "description": ""
          }
        ],
        "summary": "Create a vendor relationship"
      }
    },
    "/Vendors": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "$ref": "#/definitions/Vendors"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "$ref": "#/definitions/Vendors"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendors"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/Vendors"
            }
          }
        },
        "operationId": "GetVendors",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Get all Vendors"
      },
      "post": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "201": {
            "description": "Created. New resource created.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "CreateVendor",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorData"
            },
            "description": ""
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          }
        ],
        "summary": "Create a Vendor"
      }
    },
    "/VendorPartners/{VendorNumber}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorPartner"
            }
          }
        },
        "operationId": "GetVendorPartnerByNumber",
        "parameters": [
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorNumber",
            "in": "path",
            "required": true,
            "description": "A Vendor Number from source",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Partner given a Vendor Number"
      }
    },
    "/VendorBrands/{VendorBrandId}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.<br>",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/VendorBrand"
            }
          }
        },
        "operationId": "GetVendorBrandById",
        "parameters": [
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorBrandId",
            "in": "path",
            "required": true,
            "description": "A Brand Resource Id",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Brand given the Vendor Brand Resource Id"
      }
    },
    "/VendorSites/{VendorSiteId}/Vendors": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/Vendors"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/Vendors"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, in any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/Vendors"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/Vendors"
            }
          }
        },
        "operationId": "GetAllVendorsPerSite",
        "parameters": [
          {
            "name": "VendorSiteId",
            "in": "path",
            "required": true,
            "description": "A Vendor Site Resource Id",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          }
        ],
        "summary": "Get all Vendors for a given Site Resource Id"
      }
    },
    "/VendorOrderFroms/{VendorOrderFromId}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorOrderFrom"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorOrderFrom"
            }
          }
        },
        "operationId": "GetVendorOrderFromById",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "VendorOrderFromId",
            "in": "path",
            "required": true,
            "description": "A Vendor Order From Resource Id",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Order From given a Vendor Order From Resource Id"
      }
    },
    "/VendorMarkets/{VendorNumber}": {
      "put": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.<br>",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "$ref": "#/definitions/HttpResponseMessage"
            }
          }
        },
        "operationId": "UpdateVendorMarket",
        "parameters": [
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "VendorMarketData",
            "in": "body",
            "required": true,
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/VendorMarketData"
            },
            "description": ""
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          }
        ],
        "summary": "Update a Vendor Market for a particular Vendor Number"
      }
    },
    "/VendorPayTos/{VendorPayToId}": {
      "get": {
        "tags": [
          "VendorAccess"
        ],
        "responses": {
          "404": {
            "description": "Not Found. Resource not found.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "200": {
            "description": "OK. Unqualified success. The document in the entity-body, if any, is a representation of some resource.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "400": {
            "description": "Bad Request. There's a problem on the client side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPayTo"
            }
          },
          "500": {
            "description": "Internal Server Error. There's a problem on the server side. The document in the entity-body, if any, is an error message.",
            "schema": {
              "maxItems": 1,
              "minItems": 1,
              "$ref": "#/definitions/VendorPayTo"
            }
          }
        },
        "operationId": "GetVendorPayToById",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "REQUIRED\nIndicates the (authorization) schema and authorization credentials, based on HTTP 1.1 standard.\nToken value should indicate:\n * Identification of the requesting or responding organization to support multi-tenancy and organization awareness (OrganizationId).\n * Identification of the service user (aka requestor).\n * Authority of the user (authorization token).",
            "type": "string"
          },
          {
            "name": "VendorPayToId",
            "in": "path",
            "required": true,
            "description": "A Vendor Pay To Resource Id",
            "type": "string"
          },
          {
            "name": "DateTime",
            "in": "header",
            "required": true,
            "description": "The DateTime stamp from which the client system send the request to the service.",
            "type": "string"
          },
          {
            "name": "Source",
            "in": "header",
            "required": true,
            "description": "Source system where the data originated.",
            "type": "string"
          },
          {
            "name": "NordApiVersion",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nIndicates the version of the service (API).\r\nVersion is indicated in major.minor format.\r\n\r\n\"NordApiVersion\": \"1.0\"\r\nIf no response acceptance criteria is specified by the consumer, a value will be assigned. \r\n(*As specified in the service contract definition, or default to latest if not specified.)",
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "required": true,
            "description": "REQUIRED\r\nUnique identifier assigned to the request by the requestor. \r\nThis identifier should be used by consuming systems to tie together (correlate) message requests.",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The person who last called this operation",
            "type": "string"
          }
        ],
        "summary": "Get a Vendor Pay To given a Vendor Pay To Resource Id"
      }
    }
  },
  "tags": [
    {
      "name": "VendorAccess"
    }
  ],
  "definitions": {
    "VendorPayTo": {
      "required": [
        "VendorStatus",
        "VendorName",
        "InactiveDate",
        "IsDropShipPaymentTerms",
        "VendorLanguage",
        "VendorNumber",
        "VendorLanguageDescription",
        "VendorStatusDescription"
      ],
      "description": "An entity to whom remittance is made.  A Vendor may be related to more than one Vendor Pay To, but must be related to at least one.",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "DropShipPaymentTerms": {
          "type": "string"
        },
        "DropShipPaymentTermsDescription": {
          "type": "string"
        },
        "DebitMemoCode": {
          "type": "string"
        },
        "DebitMemoCodeDescription": {
          "type": "string"
        },
        "IsFreightCharge": {
          "type": "boolean"
        },
        "IsPrepaidInvoice": {
          "type": "boolean"
        },
        "VendorSite": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorSite"
          }
        },
        "VendorContact": {
          "$ref": "#/definitions/VendorContact"
        },
        "VendorName": {
          "type": "string"
        },
        "VendorAltNames": {
          "$ref": "#/definitions/VendorAltNames"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorNumber": {
          "description": "A user-defined unique identifier for a VENDOR.  This number is used as the primary identifier of a Vendor in some Nordstrom systems.",
          "type": "string"
        },
        "VendorStatus": {
          "type": "string"
        },
        "VendorStatusDescription": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        },
        "IsDropShipPaymentTerms": {
          "type": "boolean"
        },
        "VendorRole": {
          "$ref": "#/definitions/VendorRole"
        },
        "VendorRelationships": {
          "$ref": "#/definitions/VendorRelationships"
        },
        "InvoiceCurrencyDescription": {
          "type": "string"
        }
      }
    },
    "VendorMarketData": {
      "required": [
        "CurrencyUsageTypeDescription",
        "IsPrimaryCurrency",
        "IsRestrictedFromIntnlShipping",
        "CurrencyUsageType",
        "IsReturnAllowed",
        "MarketCode",
        "IsReturnOnly",
        "IsPreTicket",
        "IsDoNotRefuseDelivery",
        "MarketDescription",
        "IsReturnAuthorizedRequired",
        "OrganizationRetailDepartment",
        "Currency",
        "OrganizationRetailDepartmentDescription",
        "MarketStatusDescription",
        "MarketStatus",
        "IsPremark"
      ],
      "type": "object",
      "properties": {
        "MarketCode": {
          "type": "string"
        },
        "MarketDescription": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "MarketStatus": {
          "type": "string"
        },
        "MarketStatusDescription": {
          "type": "string"
        },
        "CurrencyUsageType": {
          "type": "string"
        },
        "CurrencyUsageTypeDescription": {
          "type": "string"
        },
        "IsPrimaryCurrency": {
          "type": "boolean"
        },
        "ImportStatusDetail": {
          "type": "string"
        },
        "ImportStatusDetailDescription": {
          "type": "string"
        },
        "ImportStatus": {
          "type": "string"
        },
        "ImportStatusDescription": {
          "type": "string"
        },
        "FreightTerms": {
          "type": "string"
        },
        "FreightTermsDescription": {
          "type": "string"
        },
        "FreightPaymentMethod": {
          "type": "string"
        },
        "FreightPaymentMethodDescription": {
          "type": "string"
        },
        "PurchaseType": {
          "type": "string"
        },
        "PurchaseTypeDescription": {
          "type": "string"
        },
        "ShippingMethod": {
          "type": "string"
        },
        "ShippingMethodDescription": {
          "type": "string"
        },
        "TitlePass": {
          "type": "string"
        },
        "TitlePassDescription": {
          "type": "string"
        },
        "TransportationResponsibility": {
          "type": "string"
        },
        "TransportationResponsibilityDescription": {
          "type": "string"
        },
        "IsReturnAllowed": {
          "type": "boolean"
        },
        "IsReturnAuthorizedRequired": {
          "type": "boolean"
        },
        "AuthorizationNumber": {
          "type": "integer",
          "format": "int32"
        },
        "IsReturnOnly": {
          "type": "boolean"
        },
        "IsPremark": {
          "type": "boolean"
        },
        "IsDoNotRefuseDelivery": {
          "type": "boolean"
        },
        "IsPreTicket": {
          "type": "boolean"
        },
        "IsRestrictedFromIntnlShipping": {
          "type": "boolean"
        },
        "OrganizationRetailDepartment": {
          "type": "string"
        },
        "OrganizationRetailDepartmentDescription": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "OrderPaymentMethod": {
          "type": "string"
        },
        "OrderPaymentMethodDescription": {
          "type": "string"
        },
        "HTSClassificationStatus": {
          "type": "string"
        },
        "HTSClassificationStatusDescription": {
          "type": "string"
        },
        "DischargePort": {
          "type": "string"
        },
        "DischargePortDescription": {
          "type": "string"
        },
        "EdiCharacteristics": {
          "$ref": "#/definitions/EdiCharacteristics"
        }
      }
    },
    "ContactTelephoneData": {
      "required": [
        "IsPrimaryVendorContactTelephone",
        "TelephoneType",
        "PhoneContactPointId"
      ],
      "type": "object",
      "properties": {
        "TelephoneNumber": {
          "type": "string"
        },
        "TelephoneSuffixNumber": {
          "type": "string"
        },
        "TelephonePrefixNumber": {
          "type": "string"
        },
        "TelephoneAreaCode": {
          "type": "string"
        },
        "TelephoneExtensionNumber": {
          "type": "string"
        },
        "TelephonePinNumber": {
          "type": "string"
        },
        "PhoneContactPointId": {
          "type": "string"
        },
        "TelephoneType": {
          "type": "string"
        },
        "IsPrimaryVendorContactTelephone": {
          "type": "boolean"
        }
      }
    },
    "VendorPartner": {
      "required": [
        "VendorStatus",
        "VendorName",
        "InactiveDate",
        "IsNordstromLabel",
        "VendorLanguage",
        "VendorNumber",
        "VendorLanguageDescription",
        "VendorStatusDescription"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "PartnerGroupDescription": {
          "type": "string"
        },
        "IsNordstromLabel": {
          "type": "boolean"
        },
        "NordstromLabelModificationDate": {
          "type": "integer",
          "format": "int32"
        },
        "LadingPortDescription": {
          "type": "string"
        },
        "VendorContact": {
          "$ref": "#/definitions/VendorContact"
        },
        "VendorMarket": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorMarket"
          }
        },
        "InvoiceCurrencyDescription": {
          "type": "string"
        },
        "VendorName": {
          "type": "string"
        },
        "VendorAltNames": {
          "$ref": "#/definitions/VendorAltNames"
        },
        "VendorRole": {
          "$ref": "#/definitions/VendorRole"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorRelationships": {
          "$ref": "#/definitions/VendorRelationships"
        },
        "VendorNumber": {
          "description": "A user-defined unique identifier for a VENDOR.  This number is used as the primary identifier of a Vendor in some Nordstrom systems.",
          "type": "string"
        },
        "VendorStatus": {
          "type": "string"
        },
        "VendorStatusDescription": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        },
        "SourcePartnerId": {
          "type": "string"
        }
      }
    },
    "VendorPartnerData": {
      "required": [
        "NordstromLabelModificationDate",
        "IsNordstromLabel",
        "CountryDescription",
        "PartnerGroup",
        "Id",
        "Country"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "PartnerGroup": {
          "type": "string"
        },
        "IsNordstromLabel": {
          "type": "boolean"
        },
        "NordstromLabelModificationDate": {
          "type": "integer",
          "format": "int32"
        },
        "Country": {
          "type": "string"
        },
        "CountryDescription": {
          "type": "string"
        },
        "LadingPort": {
          "type": "string"
        },
        "VendorMarketData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorMarketData"
          }
        },
        "VendorNumber": {
          "type": "string"
        }
      }
    },
    "VendorRoleData": {
      "required": [
        "VendorType",
        "Id",
        "VendorCategory"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "RoleName": {
          "type": "string"
        },
        "RoleDescription": {
          "type": "string"
        },
        "VendorType": {
          "description": "A user-defined identifier for a VENDOR TYPE.",
          "type": "string"
        },
        "VendorCategory": {
          "description": "The user-assigned identifier for a VENDOR CATEGORY.",
          "type": "string"
        }
      }
    },
    "VendorMarkets": {
      "type": "object",
      "properties": {
        "VendorMarket": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorMarket"
          }
        }
      }
    },
    "Vendors": {
      "type": "object",
      "properties": {
        "Vendor": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vendor"
          }
        }
      }
    },
    "VendorContact": {
      "required": [
        "PreferredMethodText",
        "ContactStatus",
        "OriginalMiddleName",
        "OriginalTitleSuffixCode",
        "LastName",
        "InformalName",
        "TitleSuffixCode",
        "OriginalLastName",
        "PersonalPreferenceName",
        "OriginalFirstName",
        "MiddleName",
        "FullName",
        "FirstName",
        "Id",
        "ContactType",
        "IsPrimaryVendorContact"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsPrimaryVendorContact": {
          "type": "string"
        },
        "PreferredMethodText": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "InformalName": {
          "type": "string"
        },
        "PersonalPreferenceName": {
          "type": "string"
        },
        "TitleSuffixCode": {
          "type": "string"
        },
        "OriginalFirstName": {
          "type": "string"
        },
        "OriginalMiddleName": {
          "type": "string"
        },
        "OriginalLastName": {
          "type": "string"
        },
        "OriginalTitleSuffixCode": {
          "type": "string"
        },
        "ContactStatus": {
          "type": "string"
        },
        "ContactTelephone": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactTelephone"
          }
        },
        "ContactEmail": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactEmail"
          }
        },
        "ContactType": {
          "type": "string"
        },
        "VendorPostalAddresses": {
          "$ref": "#/definitions/VendorPostalAddresses"
        },
        "Country": {
          "type": "string"
        },
        "VendorContactId": {
          "type": "string"
        }
      }
    },
    "VendorBrands": {
      "type": "object",
      "properties": {
        "VendorBrand": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorBrand"
          }
        }
      }
    },
    "BrandStatus": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "ContactTelephone": {
      "required": [
        "TelephoneTypeDescription",
        "PhoneContactPointId"
      ],
      "type": "object",
      "properties": {
        "TelephoneNumber": {
          "type": "string"
        },
        "TelephoneSuffixNumber": {
          "type": "string"
        },
        "TelephonePrefixNumber": {
          "type": "string"
        },
        "TelephoneAreaCode": {
          "type": "string"
        },
        "TelephoneExtensionNumber": {
          "type": "string"
        },
        "TelephonePinNumber": {
          "type": "string"
        },
        "PhoneContactPointId": {
          "type": "string"
        },
        "TelephoneTypeDescription": {
          "type": "string"
        },
        "IsPrimaryVendorContactTelephone": {
          "type": "boolean"
        }
      }
    },
    "VendorHouse": {
      "required": [
        "Description",
        "Code"
      ],
      "type": "object",
      "properties": {
        "HouseStatus": {
          "$ref": "#/definitions/HouseStatus"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "HouseInactiveDate": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VendorPostalAddresses": {
      "type": "object",
      "properties": {
        "VendorPostalAddress": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorPostalAddress"
          }
        }
      }
    },
    "EdiCharacteristics": {
      "required": [
        "IsEdiAvailable",
        "IsEdiDomesticPurchaseOrderFormat",
        "IsEdiContract",
        "IsEdiPartnerPurchaseOrderChange",
        "IsEdiPurchaseOrderCharge",
        "IsEdiAdvancedShipmentNotification",
        "IsEdiPurchaseOrderConfirmed",
        "IsEdiInventory",
        "IsEdiPurchaseOrder",
        "IsEdiPurchaseOrderFullReplacementSetup",
        "IsEdiDestroyInField",
        "IsEdiPartnerPurchaseOrder",
        "IsEdiInvoice"
      ],
      "type": "object",
      "properties": {
        "EDISalesReportFrequency": {
          "$ref": "#/definitions/EDISalesReportFrequency"
        },
        "IsEdiAdvancedShipmentNotification": {
          "type": "boolean"
        },
        "IsEdiAvailable": {
          "type": "boolean"
        },
        "IsEdiContract": {
          "type": "boolean"
        },
        "IsEdiDestroyInField": {
          "type": "boolean"
        },
        "IsEdiDomesticPurchaseOrderFormat": {
          "type": "boolean"
        },
        "IsEdiInvoice": {
          "type": "boolean"
        },
        "IsEdiInventory": {
          "type": "boolean"
        },
        "EdiPastCompliantDate": {
          "type": "integer",
          "format": "int32"
        },
        "IsEdiPurchaseOrder": {
          "type": "boolean"
        },
        "IsEdiPurchaseOrderCharge": {
          "type": "boolean"
        },
        "IsEdiPurchaseOrderConfirmed": {
          "type": "boolean"
        },
        "IsEdiPurchaseOrderFullReplacementSetup": {
          "type": "boolean"
        },
        "IsEdiPartnerPurchaseOrderChange": {
          "type": "boolean"
        },
        "IsEdiPartnerPurchaseOrder": {
          "type": "boolean"
        }
      }
    },
    "ContactType": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Symbol": {
          "type": "string"
        },
        "DecimalPositionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "NordstromAccepted": {
          "type": "string"
        },
        "IssuingCountry": {
          "type": "string"
        }
      }
    },
    "VendorOrderFrom": {
      "required": [
        "VendorStatus",
        "IsNPG",
        "IsDropShip",
        "IsPrepaidInvoice",
        "VendorLanguageDescription",
        "VendorStatusDescription",
        "IsAutomaticInvoiceApproval",
        "VendorName",
        "IsFreightCharge",
        "IsDefectiveClaimAgreement",
        "VendorLanguage",
        "VendorNumber",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "ClassificationType": {
          "type": "string"
        },
        "ClassificationTypeDescription": {
          "type": "string"
        },
        "InventoryManagementInfoLevel": {
          "type": "string"
        },
        "InventoryManagementInfoLevelDescription": {
          "type": "string"
        },
        "IsNPG": {
          "type": "boolean"
        },
        "IsDefectiveClaimAgreement": {
          "type": "boolean"
        },
        "IsDropShip": {
          "type": "boolean"
        },
        "DebitMemo": {
          "type": "string"
        },
        "DebitMemoDescription": {
          "type": "string"
        },
        "IsAutomaticInvoiceApproval": {
          "type": "boolean"
        },
        "IsFreightCharge": {
          "type": "boolean"
        },
        "IsPrepaidInvoice": {
          "type": "boolean"
        },
        "VendorSites": {
          "$ref": "#/definitions/VendorSites"
        },
        "InvoiceCurrencyDescription": {
          "type": "string"
        },
        "VendorName": {
          "type": "string"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorNumber": {
          "description": "A user-defined unique identifier for a VENDOR.  This number is used as the primary identifier of a Vendor in some Nordstrom systems.",
          "type": "string"
        },
        "VendorStatus": {
          "type": "string"
        },
        "ManufacturePrincipalCountry": {
          "type": "string"
        },
        "VendorStatusDescription": {
          "type": "string"
        },
        "PartnerGroup": {
          "type": "string"
        },
        "PartnerGroupDescription": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        },
        "VendorBrand": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorBrand"
          }
        },
        "VendorAltName": {
          "$ref": "#/definitions/VendorAltName"
        },
        "VendorContacts": {
          "$ref": "#/definitions/VendorContacts"
        },
        "VendorSite": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorSite"
          }
        },
        "LadingPortDescription": {
          "type": "string"
        },
        "VendorRole": {
          "$ref": "#/definitions/VendorRole"
        },
        "VendorRelationships": {
          "$ref": "#/definitions/VendorRelationships"
        },
        "VendorMarket": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorMarket"
          }
        }
      }
    },
    "VendorSite": {
      "required": [
        "OperatingUnitDescription",
        "VendorSiteUsageDescription",
        "VendorSiteUsage",
        "IsDropShipPaymentTerms",
        "VendorLanguage",
        "SiteName",
        "Id",
        "VendorLanguageDescription",
        "Currency",
        "OperatingUnit",
        "VendorSiteStatusDescription",
        "VendorSiteStatus"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "VendorSiteStatus": {
          "type": "string"
        },
        "VendorSiteStatusDescription": {
          "type": "string"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorSiteUsage": {
          "type": "string"
        },
        "VendorSiteUsageDescription": {
          "type": "string"
        },
        "OperatingUnit": {
          "type": "string"
        },
        "OperatingUnitDescription": {
          "type": "string"
        },
        "PaymentMethodDescription": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "VendorSiteId": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        },
        "CountryDescription": {
          "type": "string"
        },
        "VendorPostalAddress": {
          "$ref": "#/definitions/VendorPostalAddress"
        },
        "VendorContacts": {
          "$ref": "#/definitions/VendorContacts"
        },
        "IsDropShipPaymentTerms": {
          "type": "boolean"
        }
      }
    },
    "VendorBrand": {
      "required": [
        "Description",
        "Code"
      ],
      "type": "object",
      "properties": {
        "VendorHouse": {
          "$ref": "#/definitions/VendorHouse"
        },
        "BrandStatus": {
          "$ref": "#/definitions/BrandStatus"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "VendorLabels": {
          "$ref": "#/definitions/VendorLabels"
        },
        "BrandInactiveDate": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VendorPayToData": {
      "required": [
        "DebitMemoCode",
        "DropShipPaymentTermsDescription",
        "DropShipPaymentTerms",
        "IsFreightCharge",
        "DebitMemoCodeDescription",
        "Id",
        "IsPrepaidInvoice"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "DropShipPaymentTerms": {
          "type": "string"
        },
        "DropShipPaymentTermsDescription": {
          "type": "string"
        },
        "DebitMemoCode": {
          "type": "string"
        },
        "DebitMemoCodeDescription": {
          "type": "string"
        },
        "IsFreightCharge": {
          "type": "boolean"
        },
        "IsPrepaidInvoice": {
          "type": "boolean"
        },
        "VendorNumber": {
          "type": "string"
        }
      }
    },
    "VendorAltName": {
      "required": [
        "AltName",
        "AltShortName"
      ],
      "description": "A name under which a Vendor is known or conducts business.  This entity contains all names that can be associated with a Vendor.  AKA \"Vendor Alias\".",
      "type": "object",
      "properties": {
        "AltName": {
          "type": "string"
        },
        "AltShortName": {
          "description": "Short-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "AltMediumName": {
          "description": "Medium-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "AltLongName": {
          "description": "Long-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "VendorNameTypeDescription": {
          "type": "string"
        }
      }
    },
    "VendorPostalAddressData": {
      "required": [
        "IsOverrideStandardization",
        "IsPostalStandardized",
        "Id",
        "IsPrimaryVendorPostalAddress"
      ],
      "description": "A collection of VendorPostalAddress objects",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique system-assigned identifier for a VENDOR ADDRESS.",
          "type": "string"
        },
        "IsPrimaryVendorPostalAddress": {
          "type": "boolean"
        },
        "PostalStandardLine1Text": {
          "type": "string"
        },
        "PostalStandardLine2Text": {
          "type": "string"
        },
        "PostalStandardLine3Text": {
          "type": "string"
        },
        "PostalStandardLine4Text": {
          "type": "string"
        },
        "PostalStandardCityName": {
          "type": "string"
        },
        "PostalStandardCountyName": {
          "type": "string"
        },
        "PostalStandardCode": {
          "type": "string"
        },
        "IsPostalStandardized": {
          "type": "boolean"
        },
        "IsOverrideStandardization": {
          "type": "boolean"
        },
        "PostalLongitude": {
          "type": "string"
        },
        "PostalLatitude": {
          "type": "string"
        },
        "PostalCarrierRoute": {
          "type": "string"
        },
        "PostalBarCodeDelivery": {
          "type": "string"
        },
        "PostalOriginalLine1Text": {
          "type": "string"
        },
        "PostalOriginalLine2Text": {
          "type": "string"
        },
        "PostalOriginalLine3Text": {
          "type": "string"
        },
        "PostalOriginalLine4Text": {
          "type": "string"
        },
        "PostalOriginaCityName": {
          "type": "string"
        },
        "PostalOriginalCountyName": {
          "type": "string"
        },
        "PostalOriginalCode": {
          "type": "string"
        },
        "PostalOriginalRegionName": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "StandardizedTimeZone": {
          "type": "string"
        },
        "LocationId": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "PostalAddressAddressTypeData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostalAddressAddressTypeData"
          }
        }
      }
    },
    "ContactEmailData": {
      "required": [
        "ElectronicAddressText",
        "EmailContactPointId",
        "AddressType"
      ],
      "type": "object",
      "properties": {
        "ElectronicAddressText": {
          "type": "string"
        },
        "AddressType": {
          "type": "string"
        },
        "EmailContactPointId": {
          "type": "string"
        }
      }
    },
    "VendorSiteData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "VendorSiteStatus": {
          "type": "string"
        },
        "VendorSiteStatusDescription": {
          "type": "string"
        },
        "VendorPostalAddressData": {
          "$ref": "#/definitions/VendorPostalAddressData"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorSiteUsage": {
          "type": "string"
        },
        "VendorSiteUsageDescription": {
          "type": "string"
        },
        "OperatingUnit": {
          "type": "string"
        },
        "OperatingUnitDescription": {
          "type": "string"
        },
        "VendorContactData": {
          "$ref": "#/definitions/VendorContactData"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentMethodDescription": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "PaymentTermsDateBasis": {
          "type": "string"
        },
        "PaymentTermsDateBasisDescription": {
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/Currency"
        },
        "Country": {
          "type": "string"
        },
        "VendorNumber": {
          "type": "string"
        },
        "CountryDescription": {
          "type": "string"
        },
        "VendorSiteId": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        }
      }
    },
    "PostalAddressAddressType": {
      "required": [
        "VendorAddressTypeCode"
      ],
      "type": "object",
      "properties": {
        "VendorAddressTypeCode": {
          "type": "string"
        },
        "VendorAddressTypeShortDescription": {
          "type": "string"
        },
        "VendorAddressTypeDescription": {
          "type": "string"
        }
      }
    },
    "HttpResponseMessage": {
      "required": [
        "CorrelationId",
        "Code"
      ],
      "description": "Common REST error response",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Standard HTTP Response status code.",
          "type": "string"
        },
        "CorrelationId": {
          "description": "Request correlation identifier.",
          "type": "string"
        },
        "Message": {
          "description": "Response status message",
          "type": "string"
        }
      }
    },
    "VendorStatus": {
      "required": [
        "ISOShortCode",
        "Code"
      ],
      "description": "Indicates the overall status of a VENDOR at a point in time.\nMay or may not be implemented, depending on Vendor Type/Role.\nNote that this is different from the specific operational status values (pay, trade, compliance, etc.)",
      "type": "object",
      "properties": {
        "Code": {
          "description": "A user-defined identifier for a VENDOR NAME TYPE.",
          "type": "string"
        },
        "Description": {
          "description": "Text describing an instance of VENDOR STATUS.",
          "type": "string"
        },
        "ISOShortCode": {
          "type": "string"
        }
      }
    },
    "EDISalesReportFrequency": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "ContactStatus": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "HouseStatus": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "VendorPostalAddress": {
      "required": [
        "IsOverrideStandardization",
        "StandardizedTimeZone",
        "PostalOriginaCityName",
        "PostalStandardCode",
        "PostalStandardCityName",
        "PostalLatitude",
        "PostalStandardCountyName",
        "Region",
        "PostalBarCodeDelivery",
        "PostalOriginalLine1Text",
        "PostalLongitude",
        "PostalOriginalLine4Text",
        "PostalOriginalRegionName",
        "PostalStandardLine2Text",
        "PostalCarrierRoute",
        "PostalOriginalCode",
        "PostalOriginalLine3Text",
        "IsPrimaryVendorPostalAddress",
        "PostalStandardLine4Text",
        "PostalOriginalLine2Text",
        "State",
        "PostalStandardLine1Text",
        "IsPostalStandardized",
        "Id",
        "PostalStandardLine3Text"
      ],
      "description": "An association between VENDOR and POSTAL ADDRESS that identifies the valid addresses for a Vendor.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique system-assigned identifier for a VENDOR ADDRESS.",
          "type": "string"
        },
        "IsPrimaryVendorPostalAddress": {
          "type": "boolean"
        },
        "PostalStandardLine1Text": {
          "type": "string"
        },
        "PostalStandardLine2Text": {
          "type": "string"
        },
        "PostalStandardLine3Text": {
          "type": "string"
        },
        "PostalStandardLine4Text": {
          "type": "string"
        },
        "PostalStandardCityName": {
          "type": "string"
        },
        "PostalStandardCountyName": {
          "type": "string"
        },
        "PostalStandardCode": {
          "type": "string"
        },
        "IsPostalStandardized": {
          "type": "boolean"
        },
        "IsOverrideStandardization": {
          "type": "boolean"
        },
        "PostalLongitude": {
          "type": "string"
        },
        "PostalLatitude": {
          "type": "string"
        },
        "PostalCarrierRoute": {
          "type": "string"
        },
        "PostalBarCodeDelivery": {
          "type": "string"
        },
        "PostalOriginalLine1Text": {
          "type": "string"
        },
        "PostalOriginalLine2Text": {
          "type": "string"
        },
        "PostalOriginalLine3Text": {
          "type": "string"
        },
        "PostalOriginalLine4Text": {
          "type": "string"
        },
        "PostalOriginaCityName": {
          "type": "string"
        },
        "PostalOriginalCode": {
          "type": "string"
        },
        "PostalOriginalRegionName": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "StandardizedTimeZone": {
          "type": "string"
        },
        "LocationId": {
          "type": "string"
        },
        "PostalAddressAddressType": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostalAddressAddressType"
          }
        },
        "CountryDescription": {
          "type": "string"
        }
      }
    },
    "OrgRetailDepartmentPaymentTerms": {
      "required": [
        "OrgRetailDepartmentCode",
        "OrgRetailDepartmentId",
        "VendorMarketCode",
        "VendorMarketId",
        "PaymentTerms",
        "VendorName",
        "IsDropShipPaymentTerms",
        "VendorNumber",
        "VendorOrderFromId"
      ],
      "type": "object",
      "properties": {
        "VendorOrderFromId": {
          "type": "string"
        },
        "VendorNumber": {
          "type": "string"
        },
        "VendorName": {
          "type": "string"
        },
        "VendorMarketId": {
          "type": "string"
        },
        "VendorMarketCode": {
          "type": "string"
        },
        "VendorMarketDescription": {
          "type": "string"
        },
        "OrgRetailDepartmentId": {
          "type": "string"
        },
        "OrgRetailDepartmentCode": {
          "type": "string"
        },
        "OrgRetailDepartmentDescription": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "IsDropShipPaymentTerms": {
          "type": "boolean"
        }
      }
    },
    "VendorAltNameData": {
      "required": [
        "VendorNameType",
        "AltName",
        "AltMediumName",
        "AltLongName",
        "AltShortName"
      ],
      "type": "object",
      "properties": {
        "AltName": {
          "type": "string"
        },
        "AltShortName": {
          "description": "Short-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "AltMediumName": {
          "description": "Medium-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "AltLongName": {
          "description": "Long-length version of a name by which a Vendor is known to Nordstrom.",
          "type": "string"
        },
        "VendorNameType": {
          "type": "string"
        }
      }
    },
    "VendorLabels": {
      "type": "object",
      "properties": {
        "VendorLabel": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorLabel"
          }
        }
      }
    },
    "LabelStatus": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "VendorSites": {
      "type": "object",
      "properties": {
        "VendorSite": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorSite"
          }
        }
      }
    },
    "ContactEmail": {
      "type": "object",
      "properties": {
        "ElectronicAddressText": {
          "type": "string"
        },
        "AddressTypeDescription": {
          "type": "string"
        },
        "EmailContactPointId": {
          "type": "string"
        }
      }
    },
    "VendorLabel": {
      "required": [
        "Description",
        "Code"
      ],
      "type": "object",
      "properties": {
        "LabelStatus": {
          "$ref": "#/definitions/LabelStatus"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "string"
        },
        "LabelInactiveDate": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VendorMarket": {
      "required": [
        "CurrencyUsageTypeDescription",
        "IsPrimaryCurrency",
        "IsRestrictedFromIntnlShipping",
        "CurrencyUsageType",
        "IsReturnAllowed",
        "MarketCode",
        "IsReturnOnly",
        "PaymentTerms",
        "IsPreTicket",
        "PaymentTermsDescription",
        "IsDoNotRefuseDelivery",
        "MarketDescription",
        "IsReturnAuthorizedRequired",
        "OrganizationRetailDepartment",
        "Currency",
        "OrganizationRetailDepartmentDescription",
        "MarketStatusDescription",
        "MarketStatus",
        "IsPremark"
      ],
      "type": "object",
      "properties": {
        "MarketCode": {
          "type": "string"
        },
        "MarketDescription": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "MarketStatus": {
          "type": "string"
        },
        "MarketStatusDescription": {
          "type": "string"
        },
        "CurrencyUsageType": {
          "type": "string"
        },
        "CurrencyUsageTypeDescription": {
          "type": "string"
        },
        "IsPrimaryCurrency": {
          "type": "boolean"
        },
        "ImportStatusDetail": {
          "type": "string"
        },
        "ImportStatusDetailDescription": {
          "type": "string"
        },
        "ImportStatus": {
          "type": "string"
        },
        "ImportStatusDescription": {
          "type": "string"
        },
        "FreightTerms": {
          "type": "string"
        },
        "FreightTermsDescription": {
          "type": "string"
        },
        "FreightPaymentMethod": {
          "type": "string"
        },
        "FreightPaymentMethodDescription": {
          "type": "string"
        },
        "PurchaseType": {
          "type": "string"
        },
        "PurchaseTypeDescription": {
          "type": "string"
        },
        "ShippingMethod": {
          "type": "string"
        },
        "ShippingMethodDescription": {
          "type": "string"
        },
        "TitlePass": {
          "type": "string"
        },
        "TitlePassDescription": {
          "type": "string"
        },
        "TransportationResponsibility": {
          "type": "string"
        },
        "TransportationResponsibilityDescription": {
          "type": "string"
        },
        "IsReturnAllowed": {
          "type": "boolean"
        },
        "IsReturnAuthorizedRequired": {
          "type": "boolean"
        },
        "AuthorizationNumber": {
          "type": "integer",
          "format": "int32"
        },
        "IsReturnOnly": {
          "type": "boolean"
        },
        "IsPremark": {
          "type": "boolean"
        },
        "IsDoNotRefuseDelivery": {
          "type": "boolean"
        },
        "IsPreTicket": {
          "type": "boolean"
        },
        "IsRestrictedFromIntnlShipping": {
          "type": "boolean"
        },
        "OrganizationRetailDepartment": {
          "type": "string"
        },
        "OrganizationRetailDepartmentDescription": {
          "type": "string"
        },
        "EdiCharacteristics": {
          "$ref": "#/definitions/EdiCharacteristics"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "OrderPaymentMethod": {
          "type": "string"
        },
        "OrderPaymentMethodDescription": {
          "type": "string"
        },
        "HTSClassificationStatus": {
          "type": "string"
        },
        "HTSClassificationStatusDescription": {
          "type": "string"
        },
        "DischargePort": {
          "type": "string"
        },
        "DischargePortDescription": {
          "type": "string"
        }
      }
    },
    "VendorData": {
      "required": [
        "VendorStatus",
        "VendorStatusISOShortCode",
        "InactiveDate",
        "PaymentTermsDateBasisDescription",
        "VendorLanguageDescription",
        "PaymentMethod",
        "PaymentMethodDescription",
        "VendorStatusDescription",
        "PaymentTermsDateBasis",
        "VendorName",
        "PaymentTerms",
        "PaymentTermsDescription",
        "VendorLanguage",
        "VendorNumber",
        "Id"
      ],
      "description": "Collection of Vendor Objects",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The system-assigned unique identifier for a VENDOR.",
          "type": "string"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorNumber": {
          "description": "A user-defined unique identifier for a VENDOR.  This number is used as the primary identifier of a Vendor in some Nordstrom systems.",
          "type": "string"
        },
        "VendorStatus": {
          "type": "string"
        },
        "VendorStatusDescription": {
          "type": "string"
        },
        "VendorStatusISOShortCode": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentMethodDescription": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "VendorAltNameData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAltNameData"
          }
        },
        "PaymentTermsDateBasis": {
          "type": "string"
        },
        "PaymentTermsDateBasisDescription": {
          "type": "string"
        },
        "VendorId": {
          "type": "string"
        },
        "InvoiceCurrencyCode": {
          "type": "string"
        },
        "VendorName": {
          "type": "string"
        },
        "InactiveDate": {
          "type": "string"
        },
        "VendorRoleData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorRoleData"
          }
        }
      }
    },
    "VendorRelationshipData": {
      "required": [
        "IsRelationshipAssociated",
        "FromVendorCategory",
        "IsPartnerRelationshipEligibility"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "RelatedVendorId": {
          "type": "string"
        },
        "VendorId": {
          "type": "string"
        },
        "RelatedVendorNumber": {
          "type": "string"
        },
        "VendorRelationshipType": {
          "type": "string"
        },
        "RelatedVendorName": {
          "type": "string"
        },
        "IsRelationshipAssociated": {
          "type": "boolean"
        },
        "VendorNumber": {
          "type": "string"
        },
        "IsRelationshipPrimary": {
          "type": "boolean"
        },
        "VendorRelationshipTicketType": {
          "type": "string"
        },
        "IsPartnerRelationshipEligibility": {
          "type": "boolean"
        },
        "FromVendorType": {
          "type": "string"
        },
        "FromVendorCategory": {
          "type": "string"
        },
        "ToVendorType": {
          "type": "string"
        }
      }
    },
    "Vendor": {
      "required": [
        "VendorStatus",
        "VendorStatusISOShortCode",
        "InactiveDate",
        "PaymentTermsDateBasisDescription",
        "VendorLanguageDescription",
        "PaymentMethod",
        "PaymentMethodDescription",
        "VendorStatusDescription",
        "PaymentTermsDateBasis",
        "VendorName",
        "PaymentTerms",
        "PaymentTermsDescription",
        "IsDropShipPaymentTerms",
        "VendorLanguage",
        "VendorNumber",
        "Id"
      ],
      "description": "A subtype of VENDOR; a Vendor that receives many individual Vendor Shipments, and creates a single Consolidated Shipment to a Nordstrom distribution center.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The system-assigned unique identifier for a VENDOR.",
          "type": "string"
        },
        "VendorLanguage": {
          "type": "string"
        },
        "VendorLanguageDescription": {
          "type": "string"
        },
        "VendorNumber": {
          "description": "A user-defined unique identifier for a VENDOR.  This number is used as the primary identifier of a Vendor in some Nordstrom systems.",
          "type": "string"
        },
        "VendorStatus": {
          "type": "string"
        },
        "VendorStatusDescription": {
          "type": "string"
        },
        "VendorStatusISOShortCode": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "PaymentMethodDescription": {
          "type": "string"
        },
        "PaymentTermsDescription": {
          "type": "string"
        },
        "PaymentTerms": {
          "type": "string"
        },
        "PaymentTermsDateBasis": {
          "type": "string"
        },
        "PaymentTermsDateBasisDescription": {
          "type": "string"
        },
        "VendorName": {
          "type": "string"
        },
        "VendorAltNames": {
          "$ref": "#/definitions/VendorAltNames"
        },
        "InactiveDate": {
          "type": "string"
        },
        "VendorContacts": {
          "$ref": "#/definitions/VendorContacts"
        },
        "VendorSites": {
          "$ref": "#/definitions/VendorSites"
        },
        "VendorMarkets": {
          "$ref": "#/definitions/VendorMarkets"
        },
        "VendorRelationships": {
          "$ref": "#/definitions/VendorRelationships"
        },
        "VendorRole": {
          "$ref": "#/definitions/VendorRole"
        },
        "IsDropShipPaymentTerms": {
          "type": "boolean"
        },
        "InvoiceCurrencyDescription": {
          "type": "string"
        },
        "VendorId": {
          "type": "string"
        }
      }
    },
    "VendorContacts": {
      "type": "object",
      "properties": {
        "VendorContact": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorContact"
          }
        }
      }
    },
    "VendorRelationship": {
      "required": [
        "FromVendorCategoryDescription",
        "IsRelationshipAssociated",
        "VendorId",
        "RelatedVendorId",
        "ToVendorCategoryDescription",
        "Id",
        "RelatedVendorName",
        "RelatedVendorNumber",
        "IsPartnerRelationshipEligibility"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "RelatedVendorId": {
          "type": "string"
        },
        "VendorId": {
          "type": "string"
        },
        "VendorRelationshipTypeDescription": {
          "type": "string"
        },
        "RelatedVendorNumber": {
          "type": "string"
        },
        "RelatedVendorName": {
          "type": "string"
        },
        "VendorRelationshipTicketTypeDescription": {
          "type": "string"
        },
        "IsRelationshipAssociated": {
          "type": "boolean"
        },
        "IsRelationshipPrimary": {
          "type": "boolean"
        },
        "IsPartnerRelationshipEligibility": {
          "type": "boolean"
        },
        "FromVendorTypeDescription": {
          "type": "string"
        },
        "FromVendorCategoryDescription": {
          "type": "string"
        },
        "ToVendorTypeDescription": {
          "type": "string"
        },
        "ToVendorCategoryDescription": {
          "type": "string"
        }
      }
    },
    "PostalAddressAddressTypeData": {
      "required": [
        "VendorAddressTypeDescription",
        "VendorAddressTypeShortDescription"
      ],
      "type": "object",
      "properties": {
        "VendorAddressTypeCode": {
          "type": "string"
        },
        "VendorAddressTypeDescription": {
          "type": "string"
        },
        "VendorAddressTypeShortDescription": {
          "type": "string"
        }
      }
    },
    "VendorRole": {
      "required": [
        "VendorType",
        "VendorCategory"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "RoleName": {
          "type": "string"
        },
        "RoleDescription": {
          "type": "string"
        },
        "VendorType": {
          "description": "A user-defined identifier for a VENDOR TYPE.",
          "type": "string"
        },
        "VendorTypeDescription": {
          "description": "Text describing an instance of VENDOR TYPE.",
          "type": "string"
        },
        "VendorCategory": {
          "description": "The user-assigned identifier for a VENDOR CATEGORY.",
          "type": "string"
        },
        "VendorCategoryDescription": {
          "description": "Text describing an instance of VENDOR CATEGORY.",
          "type": "string"
        }
      }
    },
    "VendorAltNames": {
      "description": "A name under which a Vendor is known or conducts business.  This entity contains all names that can be associated with a Vendor.  AKA \"Vendor Alias\".",
      "type": "object",
      "properties": {
        "VendorAltName": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAltName"
          }
        }
      }
    },
    "VendorRelationships": {
      "type": "object",
      "properties": {
        "VendorRelationship": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorRelationship"
          }
        }
      }
    },
    "VendorContactData": {
      "required": [
        "FirstName",
        "IsPrimaryVendorContact"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsPrimaryVendorContact": {
          "type": "string"
        },
        "PreferredMethodText": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "InformalName": {
          "type": "string"
        },
        "PersonalPreferenceName": {
          "type": "string"
        },
        "TitleSuffixCode": {
          "type": "string"
        },
        "OriginalFirstName": {
          "type": "string"
        },
        "OriginalMiddleName": {
          "type": "string"
        },
        "OriginalLastName": {
          "type": "string"
        },
        "OriginalTitleSuffixCode": {
          "type": "string"
        },
        "ContactStatus": {
          "$ref": "#/definitions/ContactStatus"
        },
        "ContactType": {
          "$ref": "#/definitions/ContactType"
        },
        "ContactTelephoneData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactTelephoneData"
          }
        },
        "ContactEmailData": {
          "$ref": "#/definitions/ContactEmailData"
        },
        "VendorPostalAddressData": {
          "$ref": "#/definitions/VendorPostalAddressData"
        },
        "Country": {
          "type": "string"
        },
        "VendorNumber": {
          "type": "string"
        },
        "VendorContactId": {
          "type": "string"
        }
      }
    },
    "VendorOrderFromData": {
      "required": [
        "ClassificationTypeDescription",
        "IsNPG",
        "DebitMemoDescription",
        "VendorTrait",
        "InventoryManagementInfoLevelDescription",
        "IsDropShip",
        "IsPrepaidInvoice",
        "ManufacturerPrincipleCountry",
        "IsAutomaticInvoiceApproval",
        "InventoryManagementInfoLevel",
        "IsPrimaryTrait",
        "ManufacturerPrincipleCountryDescription",
        "IsFreightCharge",
        "IsDefectiveClaimAgreement",
        "ClassificationType",
        "VendorTraitDescription",
        "Id",
        "DebitMemo"
      ],
      "type": "object",
      "properties": {
        "InventoryManagementInfoLevelDescription": {
          "type": "string"
        },
        "IsNPG": {
          "type": "boolean"
        },
        "IsDefectiveClaimAgreement": {
          "type": "boolean"
        },
        "IsDropShip": {
          "type": "boolean"
        },
        "DebitMemo": {
          "type": "string"
        },
        "DebitMemoDescription": {
          "type": "string"
        },
        "IsAutomaticInvoiceApproval": {
          "type": "boolean"
        },
        "IsFreightCharge": {
          "type": "boolean"
        },
        "IsPrepaidInvoice": {
          "type": "boolean"
        },
        "Id": {
          "type": "string"
        },
        "ClassificationType": {
          "type": "string"
        },
        "ClassificationTypeDescription": {
          "type": "string"
        },
        "InventoryManagementInfoLevel": {
          "type": "string"
        },
        "VendorTrait": {
          "type": "string"
        },
        "VendorTraitDescription": {
          "type": "string"
        },
        "IsPrimaryTrait": {
          "type": "boolean"
        },
        "LadingPort": {
          "type": "string"
        },
        "PartnerGroup": {
          "type": "string"
        },
        "PartnerGroupDescription": {
          "type": "string"
        },
        "ManufacturerPrincipleCountry": {
          "type": "string"
        },
        "ManufacturerPrincipleCountryDescription": {
          "type": "string"
        },
        "VendorNumber": {
          "type": "string"
        },
        "VendorMarketData": {
          "maxItems": 2147483647,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorMarketData"
          }
        }
      }
    }
  }
}